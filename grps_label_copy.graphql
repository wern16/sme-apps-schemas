"""
Defines a calendar date
"""
scalar Date

"""
Defines a point in time (e.g. DateTime)
"""
scalar Datetime

"""
Defines a qualified URL
"""
scalar URL

"""
Identifies the registered backend data sources
"""
enum Source{
    GRPS
    CONSOLE
    SPOTIFY
    APPLE
    GRACENOTE
    MUSICBRAINZ
    ORCHARE
}

"""
Image Usage Types
"""
enum GRPS_ImageUsageType{
    THUMBNAIL
    COVER_ART
    PROFILE
}
"""
Participant contributor classes or task classes
"""
enum GRPS_ContributorClass {
    PERFORMANCE
    COMPOSITION
    PRODUCTION
}

"""
Participant Sort Keys
"""
enum GRPS_ParticipantSortKeys {
    ID
    NAME
}

"""
Contributor Role Sort Keys
"""
enum GRPS_ContributorRoleSortKeys {
    ROLE_CLASS
    ROLE_TYPE
}

"""
Recording Project Sort Keys
"""
enum GRPS_ProjectSortKeys {
    ID
    RECORD_DATE
}

"""
ProductVersion Sort Keys
"""
enum GRPS_ProductVersionSortKeys {
    ID
    RELEASE_DATE
}

"""
Product Sort Keys
"""
enum GRPS_ProductSortKeys {
    ID
    RELEASE_DATE
}
"""
Asset Sort Keys
"""
enum GRPS_AssetSortKeys {
    ID
    RELEASE_DATE
}
"""
Stub - Aggregate Participant Entity
extend type Participant @key(fields: "grpsId") {
"""
type Participant {
    """
    The source system, unique identifier for the Participant (GRPS ID)
    """
    grpsId: ID!

    """
    Extend Participant to add GRPS_Participant
    """
    GRPS_Participant: GRPS_Participant
}

"""
Identifies the language for localized values
"""
type GRPS_LanguageCd{
    script: String!
    language: String!
}

"""
Input type for Language Code
"""
input GRPS_LanguageCdInput {
    script: String!
}

"""
Identifies the valid country codes
"""
type GRPS_CountryCd{
    """
    The ISO 3166-2 2 character alpha Country Code
    """
    code_2: String!
    """
    The ISO 3166-3 3 character alpha Country Code
    """
    code_3: String
    """
    The country name
    """
    name: String!
}
"""
Identifies the input for GRPS_CountryCd
"""
input GRPS_CountryCdInput {
    """
    The ISO 3166-2 2 character alpha Country Code
    """
    code_2: String!
}

"""
The original source of the data
"""
type GRPS_DataSourceCd{
    """
    A unique code identifying the data source
    """
    code: String!
    """
    The display title for the data source
    """
    title: String!
}

"""
Localized text.
"""
type GRPS_LocalString{
    text: String!
    language: GRPS_LanguageCd!
}

"""
Local Text Input
"""
input GRPS_LocalStringInput {
    text: String!
    language: GRPS_LocalStringInput!
}

"""
A Company associated with the Participant, Project, Product.
"""
type GRPS_Company {
    id: ID!
}

"""
A Repertoire Owner
"""
type GRPS_RepertoireOwner {
    id: ID!
    company: GRPS_Company
}

"""
Types of Participants
"""
type GRPS_ParticipantType {
    """
    A unique id for a Participant Type
    """
    id: ID!
    """
    The title of the Participant Type
    """
    title: String!
    """
    Indicates whether this type of Participant can be a Member of a Group Participant
    """
    eligibleMember: Boolean!
    """
    Indicates whether this type of Participant can be a Group with Members.
    """
    eligibleGroup: Boolean!
    """
    Participant SubTypes
    """
    subTypes: [GRPS_ParticipantSubType!]

}

"""
SubType of Participants.
"""
type GRPS_ParticipantSubType {
    """
    A unique id for a Participant SubType
    """
    id: ID!
    """
    The title for the Participant SubType
    """
    title: String!
    """
    Parent Participant Type
    """
    parent: GRPS_ParticipantType!
}


"""
Identifies the local Participant id and name
"""
type GRPS_LocalParticipant {
    """
    The local Country
    """
    country: GRPS_CountryCd!
    """
    The local Country Participant Identifer
    """
    localId: String!
}

"""
Identifies the input type for local Participant id
"""
input GRPS_LocalParticipantInput {
    """
    The local Country
    """
    country: GRPS_CountryCdInput!
    """
    The local Country Participant Identifer
    """
    localId: String!
}

"""
Individual, Band Artists, Participants
@ToDo - Add Rep Owner, Participant Main Artist relations, and Participant Credits
"""
type GRPS_Participant{
    """
    The source system, unique identifier for the Participant (GRPS ID)
    """
    grpsId: ID!
    """
    A moniker identifying the source backend service for this instance of a Participant.  This is a placeholder if
    the same GRPS GQL schema is used for the variants and replicas of GRPS backend sources.
    """
    source: Source!
    """
    The complete name of the Party in its normal
    form of presentation (e.g. John H. SMith, Acme
    Music Inc., The Beatles)
    """
    fullName: String!
    """
    The complete name of the Party in the form in which it
    normally appears in an alphabetic index, with
    the KeyName first (e.g. Smith, John H.; Beatles, The)
    """
    indexName: String
    """
    The names (aka First Name) preceeding the KeyName in the
    full name (e.g. 'George' in 'George Michael'; 'John
    Fitzgerald' in 'John Fitzgerald Kennedy').  Not all Party
    Names have a NamesBeforeKeyName (e.g. Madonna, Prince).
    """
    firstName: String
    """
    The family or surname (aka Last Name) typically used to
    index an entry in an alphabetic list, such as 'Michael' in
    'George Michael' or 'Kennedy' in 'John Fitzgerald Kennedy'.
    """
    lastName: String
    """
    Any additions to the Last and First Name such as featuring
    artist information or duet partners
    """
    bleed: String
    """
    The legal first name for the Participant, if different than the Participant name (tras006 qualified Legal Name)
    """
    legalFirstName: String
    """
    The legal last name for the Participant, if different than the Participant name (tras006 qualified Legal Name)
    """
    legalLastName: String
    """
    The local language context for name
    """
    nameLanguage: GRPS_LanguageCd
    """
    The native language of the participant (source tras006)
    """
    nativeLanguage: GRPS_LanguageCd
    """
    Identifies this as the Preferred Participant profile
    """
    preferred: Boolean
    """
    Information to assist in identifying similar artist names (e.g. tras039 Characteristics)
    """
    disambiguation: String
    """
    A collection of localized names for the primary name of Participant (sources all localized names, and encodings)
    """
    localizedNames: [GRPS_LocalString!]
    """
    A collection of local country information for the Participant (source tras212, tras026)
    """
    localParticipants: [GRPS_LocalParticipant!]
    """
    Defines the type of Paricipant (e.g. Person, Individual,  Band or Compound Artist). This is a key table for valid  Participant Types
    """
    participantType: GRPS_ParticipantType!
    """
    The Spotify URI for this Participant
    """
    spotifyURI: String
    """
    The Apple Id for this Participant
    """
    appleId: String
    """
    The ISNI for this Participant
    """
    isni: String
    """
    A collection of collaborations the Participant (source tras006 family-no), exclude source Participant.
    """
    collaborations(limit: Int!, after: String, query: String, sortKey: GRPS_ParticipantSortKeys = ID, reverse: Boolean = false): [GRPS_ParticipantConnection!]
    """
    A collection of also known as names for the Participant (e.g.    'Beyonce' is also known as 'Queen B', 'Bruce Springsteen' is
    also known as 'The Boss').  This collection may include the Legal Name for the Participant (source tras006 - alias_no)
    """
    aliases(limit: Int!, after: String, query: String, sortKey: GRPS_ParticipantSortKeys = ID, reverse: Boolean = false): [GRPS_ParticipantConnection!]
    """
    Identifies Particpant membership in a group
    """
    memberOf: [GRPS_ParticipantMember!]
    """
    Identifies member Participats of this Participant group
    """
    members: [GRPS_ParticipantMember!]
    """
    Date of Birth
    """
    dateOfBirth: Date
    """
    Date of Death
    """
    dateOfDeath: Date
    """
    The nationality of the Participant
    """
    nationality: GRPS_CountryCd
    """
    City associated with Participant
    """
    cityAffliation: String
    """
    Most frequent contributor roles
    """
    typicalRoles: String
    """
    Participant Appears On Recording Projects
    """
    projects (limit: Int!, after: String, query: String, sortKey: GRPS_ProjectSortKeys = ID, reverse: Boolean = false): [GRPS_ProjectConnection!]
    """
    Participant Appears On Product Versions
    """
    productVersions (limit: Int!, after: String, query: String, sortKey: GRPS_ProductVersionSortKeys = ID, reverse: Boolean = false): [GRPS_ProductVersionConnection!]
    """
    Participant Appears On Products
    """
    products (limit: Int!, after: String, query: String, sortKey: GRPS_ProductSortKeys = CLASS, reverse: Boolean = false): [GRPS_ProductConnection!]
    """
    Participant Appears On Tracks
    """
    assets (limit: Int!, after: String, query: String, sortKey: GRPS_AssetSortKeys = CLASS, reverse: Boolean = false): [GRPS_AssetConnection!]
    """
    Participant images
    """
    images: [GRPS_Image!]
    """
    Related Participant Content Links
    """
    relatedContent: [GRPS_ContentLink!]
    """
    The original source of this Participant
    """
    dataSource: GRPS_DataSourceCd
    """
    A collection of downstream systems dependent on this Participant
    """
    whereUsed: [String!]
}

"""
Defines a member in a group of participants.
"""
type GRPS_ParticipantMember{
    """
    Defines the type of membership for a participant
    """
    memberType: String!
    """
    Member Participant
    """
    member: GRPS_Participant
}

"""
The input type to add a member to a group Participant
"""
input GRPS_ParticipantMemberInput{
    """
    The target group Participant ID.  The respective Participant Type must allow Members
    """
    groupMemberId: ID!
    """
    Defines the type of membership for a participant
    """
    memberType: String!
    """
    Member Participant ID
    """
    memberId: ID!
}

"""
The input type to add an associated (Collaborator, Alias) a Participant, or merge two Participants
"""
input GRPS_ParticipantAssociationInput{
    """
    The target Participant ID
    """
    targetParticipantId: ID!
    """
    Source Participant ID
    """
    sourceParticipantId: ID!
}
"""
A tagging interface to define an entity for which Participants can contribute to its creation
"""
interface GRPS_ContributableWork {
    id: ID!
}

"""
Defines a Participant Credit or Contribution to a Recording Project, Product Version, Product or Track
"""
type GRPS_ContributedWork {
    """
    Defines the high level role for the Particpant contribution
    """
    roleClass: String!
    """
    Defines the specific role the Participant contribution (e.g. DDEX Contributor Roles)
    """
    roleType: String!
    """
    The entity for which the Participant contributed to its production
    """
    work: GRPS_ContributableWork!
    """
    A flag to indicate the Participant's role in the work is confidential
    """
    isConfidential: Boolean
}

"""
Defines a Participant Credit or Contribution to a Recording Project, Product Version, Product or Track
"""
type GRPS_Contributer {
    """
    Defines the specific role the Participant contribution (e.g. DDEX Contributor Roles)
    """
    role: GRPS_ContributorTaskType!
    """
    The entity for which the Participant contributed to its production
    """
    contributor: GRPS_Participant!
    """
    A flag to indicate the Participant's role in the work is confidential
    """
    isConfidential: Boolean
}

"""
A Project Connection Connection
"""
type GRPS_ProjectConnection {
    totalCount: Int!
    nodes: [GRPS_Project!]
}

"""
A Product Version Connection
"""
type GRPS_ProductVersionConnection {
    totalCount: Int!
    nodes: [GRPS_ProductVersion!]
}

"""
A Product Connection
"""
type GRPS_ProductConnection {
    totalCount: Int!
    nodes: [GRPS_Product!]
}

"""
An Asset Connection
"""
type GRPS_AssetConnection {
    totalCount: Int!
    nodes: [GRPS_Asset!]
}

"""
A Participant Contributor Connection
"""
type GRPS_ContributerConnection {
    totalCount: Int!
    nodes: [GRPS_Contributer!]
}

"""
Defines a internet accessible image for use with Entities
"""
type GRPS_Image{
    url: URL!
    source: Source!
    text: String
    height: Int!
    width: Int!
    usage: GRPS_ImageUsageType!
}

"""
Defines an content links for an entity
"""
type GRPS_ContentLink{
    url: URL!
    source: Source!
    text: String
    desc: String
}

"""
Types of Contributor Tasks or Roles
"""
type GRPS_ContributorTaskClass {
    """
    A unique id for a Contributor Task Class
    """
    id: ID!
    """
    The title of the Task Class
    """
    title: GRPS_LocalString!
}

"""
Types of Contributor Tasks or Roles
"""
type GRPS_ContributorTaskType {
    """
    A unique id for a Contributor Task Type
    """
    id: ID!
    """
    The title of the Contributor Task Type
    """
    title: GRPS_LocalString!
    """
    The equivalent DDEX role for this task.
    """
    ddexTitle: String
    """
    Localized Titles
    """
    localizedTitles: [GRPS_LocalString!]
    """
    Contributor Task Class
    """
    taskClass: GRPS_ContributorTaskClass
    """
    Indicates whether this Task Type can have subTypes
    """
    eligibleGroup: Boolean!
    """
    Parent Task Type
    """
    parentTaskType: GRPS_ContributorTaskType
    """
    Child Taks Types
    """
    childTaskTypes: [GRPS_ContributorTaskType!]
}

"""
Defines a Recording Project
"""
type GRPS_Project implements GRPS_ContributableWork {
    """
    The source system, unique identifier for the Recording Project
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Recording Project
    """
    source: Source!
    """
    Participants contributing to this Recording Project
    """
    contributors (limit: Int!, after: String, query: String, sortKey: GRPS_ContributorRoleSortKeys = ID, reverse: Boolean = false): [GRPS_ContributerConnection!]
}


"""
Defines a Prodcut Version
"""
type GRPS_ProductVersion implements GRPS_ContributableWork {
    """
    The source system, unique identifier for the Product Version
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Product Version
    """
    source: Source!
    """
    Participants contributing to this Product Version
    """
    contributors (limit: Int!, after: String, query: String, sortKey: GRPS_ContributorRoleSortKeys = ID, reverse: Boolean = false): [GRPS_ContributerConnection!]

}


"""
Defines a Product
"""
type GRPS_Product implements GRPS_ContributableWork {
    """
    The source system, unique identifier for the Product
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Product
    """
    source: Source!
    """
    Participants contributing to this Product
    """
    contributors (limit: Int!, after: String, query: String, sortKey: GRPS_ContributorRoleSortKeys = ID, reverse: Boolean = false): [GRPS_ContributerConnection!]

}

"""
Defines a Track (aka DDEX MusicalWorkSoundRecording)
"""
type GRPS_Asset implements GRPS_ContributableWork {
    """
    The source system, unique identifier for the Track
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Track
    """
    source: Source!
    """
    Participants contributing to this Track
    """
    contributors (limit: Int!, after: String, query: String, sortKey: GRPS_ContributorRoleSortKeys = ID, reverse: Boolean = false): [GRPS_ContributerConnection!]


}


"""
Defines a Song (aka DDEX MusicalWork)
"""
type GRPS_Song {
    """
    The source system, unique identifier for the Song
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Song
    """
    source: Source!
}

"""
Information about pagination in a connection.
"""
type GRPS_ParticipantConnection {
    """
    Identifies the total count of items in the connection
    """
    totalCount: Int!

    """
    A list of Participant nodes
    """
    nodes: [GRPS_Participant!]
}

input GRPS_ParticipantInput {
    """
    The complete name of the Party in its normal
    form of presentation (e.g. John H. SMith, Acme
    Music Inc., The Beatles)
    """
    fullName: String!
    """
    The complete name of the Party in the form in which it
    normally appears in an alphabetic index, with
    the KeyName first (e.g. Smith, John H.; Beatles, The)
    """
    indexName: String
    """
    The names (aka First Name) preceeding the KeyName in the
    full name (e.g. 'George' in 'George Michael'; 'John
    Fitzgerald' in 'John Fitzgerald Kennedy').  Not all Party
    Names have a NamesBeforeKeyName (e.g. Madonna, Prince).
    """
    firstName: String
    """
    The family or surname (aka Last Name) typically used to
    index an entry in an alphabetic list, such as 'Michael' in
    'George Michael' or 'Kennedy' in 'John Fitzgerald Kennedy'.
    """
    lastName: String
    """
    Any additions to the Last and First Name such as featuring
    artist information or duet partners
    """
    bleed: String
    """
    The legal first name for the Participant, if different than the Participant name (tras006 qualified Legal Name)
    """
    legalFirstName: String
    """
    The legal last name for the Participant, if different than the Participant name (tras006 qualified Legal Name)
    """
    legalLastName: String
    """
    The local language context for name
    """
    nameLanguage: GRPS_LanguageCdInput
    """
    The native language of the participant (source tras006)
    """
    nativeLanguage: GRPS_LanguageCdInput
    """
    Identifies this as the Preferred Participant profile
    """
    preferred: Boolean

    """
    Information to assist in identifying similar artist names (e.g. tras039 Characteristics)
    """
    disambiguation: String
    """
    A collection of localized names for the primary name of Participant (sources all localized names, and encodings)
    """
    localizedNames: [GRPS_LocalStringInput!]
    """
    A collection of local country information for the Participant (source tras212, tras026)
    """
    localParticipants: [GRPS_LocalParticipantInput!]
    """
    Defines the type of Paricipant (e.g. Person, Individual,  Band or Compound Artist). This is a key table for valid  Participant Types
    """
    participantTypeId: ID!
    """
    Defines a collection of finer-grained SubTypes to describe the Participant Type
    """
    participantSubTypes: [ID!]
    """
    The Spotify URI for this Participant
    """
    spotifyURI: String
    """
    The Apple Id for this Participant
    """
    appleId: String
    """
    The ISNI for this Participant
    """
    isni: String
    """
    Date of Birth
    """
    dateOfBirth: Date
    """
    Date of Death
    """
    dateOfDeath: Date
    """
    The nationality of the Participant
    """
    nationality: GRPS_CountryCdInput
    """
    City associated with Participant
    """
    cityAffliation: String
}
"""
Participant Delete Input
"""
input GRPS_ParticipantDeleteInput{
    """
    The source system, unique identifier for the Participant (GRPS ID)
    """
    grpsId: ID!
    """
    A moniker identifying the source backend service for this instance of a Participant.  This is a placeholder if
    the same GRPS GQL schema is used for the variants and replicas of GRPS backend sources.
    """
    source: Source!
}

"""
Return type for createParticipant mutation
"""
type GRPS_ParticipantMutationResult {
    """
    The created or updated Participant
    """
    participant: GRPS_Participant
    """
    A list of checked errors that occurred executing the mutation
    """
    userErrors: [GRPS_UserError!]!
}

"""
Return type for createParticipant mutation
"""
type GRPS_ParticipantDeleteResult {
    """
    The id of the deleted Participant
    """
    id: ID!
    """
    A list of checked errors that occurred executing the mutation
    """
    userErrors: [GRPS_UserError!]!
}

type GRPS_UserError {
    """
    THe path to the field which caused the error
    """
    field: [String!]
    """
    A unique code identifying the error
    """
    code: String!
    """
    The error message
    """
    message: String!
}

type Query {
    """
    Returns the Participant by Id
    """
    participant(id: String!) : GRPS_Participant

    """
    Search across for GRPS specific Participants, and if referenced, delegate to RDX service to find external links
    # Search for matching Participant from the GRPS backend service
    # Return GRPS_Participant type for each matching GRPS Participant
    # A reference to a extParticipants field causes the federation to delegate to RDX service using GRPS Participant id and source
    # RDX service finds all external Participants (id and source) mapped to the GRPS Participant
    # A reference to a Spotify Participant field on the external Participant causes the federation to delegate to SPOT_Participant field
    # The result is a GRPS Participant with a collection of external linked Participants

    Parameters:
    limit - the number of Participants to return
    after - return the next limit of Participants after the provided Participant Id
    query - text search across selected fields, OR formated search syntax (e.g. GRPS Search Syntax)
    sortKey - an enum identifying the field to sort on
    reverse - a boolean to indicate whether to reverse the sort (DESC)
    """
    participants (limit: Int!, after: String, query: String, sortKey: GRPS_ParticipantSortKeys = ID, reverse: Boolean = false) : [GRPS_ParticipantConnection!]
}

type Mutation {
    """
    Create a new Participant
    """
    participantCreate(input: GRPS_ParticipantInput!) : GRPS_ParticipantMutationResult
    """
    Update a Participant
    """
    participantUpdate(input: GRPS_ParticipantInput!) : GRPS_ParticipantMutationResult
    """
    Delete a Participant
    """
    participantDelete(input: GRPS_ParticipantDeleteInput!) : GRPS_ParticipantDeleteResult
    """
    Add a Participant to a Group Participant
    """
    participantAddMember(input: GRPS_ParticipantMemberInput!) : GRPS_ParticipantMutationResult
    """
    Add a Participant as a Collaborator
    """
    participantAddCollaborator(input: GRPS_ParticipantAssociationInput!) : GRPS_ParticipantMutationResult
    """
    Add a Participant as a Alias
    """
    participantAddAlias(input: GRPS_ParticipantAssociationInput!) : GRPS_ParticipantMutationResult
    """
    Merge two Participants retaining the Target Participant
    """
    participantMerge(input: GRPS_ParticipantAssociationInput!) : GRPS_ParticipantMutationResult
}

schema{
    query: Query
    mutation: Mutation
}