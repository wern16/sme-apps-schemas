"""
Defines a calendar date
"""
scalar Date

"""
Defines a point in time (e.g. DateTime)
"""
scalar Datetime

"""
Defines a qualified URL
"""
scalar URL

"""
Identifies the registered backend data sources
"""
enum Source{
    GRPS
    CONSOLE
    SPOTIFY
    APPLE
    GRACENOTE
    MUSICBRAINZ
    ORCHARE
}

"""
Image Usage Types
"""
enum ImageUsageType{
    THUMBNAIL
    COVER_ART
    PROFILE
}
"""
Participant contributor classes or task classes
"""
enum ContributorClass {
    PERFORMANCE
    COMPOSITION
    PRODUCTION
}

"""
Stub - Aggregate Participant Entity
"""
type Participant {
    """
    Universally, unique identifier for backend service Participant
    """
    id: ID!
    """
    Identifies the source backend service of the Participant
    """
    source: Source
    """
    Exend Participant to add GRPS_Participant
    """
    GRPS_Participant: GRPS_Participant
}

"""
Identifies the language for localized values
"""
type GRPS_LanguageCd{
    script: String!
    language: String!
}

"""
Identifies the valid country codes
"""
type GRPS_CountryCd{
    """
    The ISO 3166-2 2 character alpha Country Code
    """
    code_2: String!
    """
    The ISO 3166-3 3 character alpha Country Code
    """
    code_3: String!
    """
    The country name
    """
    name: String!
}

"""
Localized text.
"""
type GRPS_LocalString{
    text: String!
    language: GRPS_LanguageCd!
}

"""
Type type of group membership
"""
type GRPS_DataSourceCd{
    id: ID!
    code: String!
    title: GRPS_LocalString!
}
"""
A Company associated with the Participant, Project, Product.
"""
type GRPS_Company {
    id: ID!
}

"""
A Repertoire Owner
"""
type GRPS_Repertoire_Owner {
    id: ID!
}

"""
The Type of Artist with localized titles
"""
type GRPS_ParticipantType {
    id: ID!
    title: GRPS_LocalString!
    eligibleMember: Boolean!
    eligibleGroup: Boolean!
    """
    Defines a further classification of the type of Participant
    """
    participantSubTypes: [GRPS_LocalString!]
}

"""
A fully qualified, localized party name
"""
type GRPS_PartyName{
    """
    The complete name of the Party in its normal
    form of presentation (e.g. John H. SMith, Acme
    Music Inc., The Beatles)
    """
    fullName: String!
    """
    The fullname transcribed into 7-bit ASCII characters
    """
    asciiFullName: String!
    """
    The complete name of the Party in the form in which it
    normally appears in an alphabetic index, with
    the KeyName first (e.g. Smith, John H.; Beatles, The)
    """
    indexName: String!
    """
    The names (aka First Name) preceeding the KeyName in the
    full name (e.g. 'George' in 'George Michael'; 'John
    Fitzgerald' in 'John Fitzgerald Kennedy').  Not all Party
    Names have a NamesBeforeKeyName (e.g. Madonna, Prince).
    """
    namesBeforeKeyName: String!
    """
    The family or surname (aka Last Name) typically used to
    index an entry in an alphabetic list, such as 'Michael' in
    'George Michael' or 'Kennedy' in 'John Fitzgerald Kennedy'.
    """
    keyname: String!
    """
    The names following the KeyName (e.g. 'Ibrahim' in 'Anwar
    Ibrahim').  This is common in many Asian personal name forms
    where the full name begins with the KeyName, which is followed
    by other names.
    """
    namesAfterKeyname: String!
    """
    Any additions to the Last and First Name such as featuring
    artist information or duet partners
    """
    bleed: String!
    """
    A short version of the Party Name for use on devices with
    a small display.
    """
    abbrName: String!
    """
    The local language context for name
    """
    language: GRPS_LanguageCd
}
"""
Identifies the local Participant id and name
"""
type GRPS_Local_Participant {
    """
    The local Country
    """
    country: GRPS_CountryCd
    """
    The local Country Participant Identifer
    """
    localId: String
    """
    The local name of the Participant in the designated language
    """
    localName: GRPS_PartyName
}

"""
Identifies the local Company Participant id and name
"""
type GRPS_Company_Participant {
    """
    The associated Company
    """
    company: GRPS_Company
    """
    The local Company Participant Identifer
    """
    localId: String
    """
    The local name of the Participant in the designated language
    """
    localName: GRPS_PartyName
}

"""
Individual, Band Artists, Participants
@ToDo - Add Rep Owner, Participant Main Artist relations, and Participant Credits
"""
type GRPS_Participant{
    """
    The source system, unique identifier for the Participant
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Participant
    """
    source: Source!
    """
    A collection of mapped, external (Spotify, Gracenote, Orchard, etc.) Participant Entities
    """
    extParticipants: [Participant!]
    """
    The fully qualified, localized name for the Participant
    """
    name: GRPS_PartyName!
    """
    Information to assist in identifying similar artist names (e.g. Characteristics)
    """
    disambiguation: String!
    """
    The native language of the participant
    """
    nativeLanguage: GRPS_LanguageCd
    """
    The legal name for the Participant, if different than the Participant name
    """
    legalName: GRPS_PartyName
    """
    Flag to assist in disambiguating possible duplicate Participants
    """
    isPreferred: Boolean!
    """
    A collection of localized names for the primary name of Participant
    """
    localizedNames: [GRPS_PartyName!]
    """
    A collection of local country information for the Participant
    """
    altLocalParticipants: [GRPS_Local_Participant!]
    """
    A collection of Company specfic information for the Participant
    """
    altCompanyParticipants: [GRPS_Company_Participant!]
    """
    A collection of also known as names for the Participant (e.g.
    'Beyonce' is also known as 'Queen B', 'Bruce Springsteen' is
    also known as 'The Boss').  This collection may include
    the Legal Name for the Participant
    """
    altNames: [GRPS_PartyName!]
    """
    Defines the type of Paricipant (e.g. Person, Individual,
    Band or Compound Artist). This is a key table for valid
    Participant Types
    """
    participantType: GRPS_ParticipantType!
    """
    The Repertoire Owner for the Participant
    """
    repOwner: GRPS_Repertoire_Owner
    """
    Identifies Particpant membership in a group
    """
    memberOf: [GRPS_Member!]
    """
    Identifies member Participats of this Participant group
    """
    members: [GRPS_Member!]
    """
    Date of Birth
    """
    dateOfBirth: Date
    """
    Date of Death
    """
    dateOfDeath: Date
    """
    The nationality of the Participant
    """
    nationality: GRPS_CountryCd
    """
    City associated with Participant
    """
    cityAffliation: String
    """
    Most frequent contributor roles
    """
    typicalRoles: String
    """
    Participant Contributions
    """
    contributions: [GRPS_Contribution!]
    """
    Notes and comments regarding Participant
    """
    comments: [GRPS_Comment!]
    """
    User messages posted to the Participant
    """
    userMessages: [GRPS_User_Message!]
    """
    Participant images
    """
    images: [GRPS_Image!]
    """
    Related Participant Content Links
    """
    relatedContent: [GRPS_ContentLink!]
    """
    A collection of downstream systems dependent on this Participant
    """
    whereUsed: [String!]
}

"""
Defines a member in a group of participants.
"""
type GRPS_Member{
    """
    Defines the type of membership for a participant
    """
    memberType: String!
    """
    Member Participant
    """
    member: GRPS_Participant
}

"""
A tagging interface to define an entity for which Participants can contribute to its creation
"""
interface GRPS_ContributorWork {

}

"""
Defines a Participant Credit or Contribution to a Recording Project, Product Version, Product or Track
"""
type GRPS_Contribution {
    """
    Idenifies the Participant Contributor
    """
    contributor: GRPS_Participant!
    """
    Defines the high level role for the Particpant contribution
    """
    roleClass: ContributorClass!
    """
    Defines the specific role the Participant contribution (e.g. DDEX Contributor Roles)
    """
    roleType: String!
    """
    The entity for which the Participant contributed to its production
    """
    contributeToEntity: GRPS_ContributorWork!
    """
    A flag to indicate the Participant's role in the work is confidential
    """
    isConfidential: Boolean
    }

"""
Defines a localized, ordered entity comment
"""
type GRPS_Comment{
    text: GRPS_LocalString!
    updateDt: Datetime!
    updateBy: String!
}

"""
Defines a localized, ordered user message comment
"""
type GRPS_User_Message{
    messageType: String!
    messageText: GRPS_LocalString
    participant: GRPS_Participant
    project: GRPS_Recording_Project
    productVersion: GRPS_Product_Version
    product: GRPS_Product_Version
    track: GRPS_Track
    updateDt: Datetime!
    updateBy: String!
}
"""
Defines a internet accessible image for use with Entities
"""
type GRPS_Image{
    url: URL!
    source: Source!
    text: GRPS_LocalString
    height: Int!
    width: Int!
    usage: ImageUsageType!
}

"""
Defines an content links for an entity
"""
type GRPS_ContentLink{
    url: URL!
    source: Source!
    text: GRPS_LocalString
    desc: GRPS_LocalString
}

"""
Defines a Recording Project
"""
type GRPS_Recording_Project implements GRPS_ContributorWork {
    """
    The source system, unique identifier for the Recording Project
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Recording Project
    """
    source: Source!
    """
    Participants contributing to this Recording Project
    """
    contributors: [GRPS_Contribution!]
}


"""
Defines a Prodcut Version
"""
type GRPS_Product_Version implements GRPS_ContributorWork {
    """
    The source system, unique identifier for the Product Version
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Product Version
    """
    source: Source!
    """
    Participants contributing to this Product Version
    """
    contributors: [GRPS_Contribution!]

}


"""
Defines a Product
"""
type GRPS_Product implements GRPS_ContributorWork {
    """
    The source system, unique identifier for the Product
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Product
    """
    source: Source!
    """
    Participants contributing to this Product
    """
    contributors: [GRPS_Contribution!]

}

"""
Defines a Track (aka DDEX MusicalWorkSoundRecording)
"""
type GRPS_Track implements GRPS_ContributorWork {
    """
    The source system, unique identifier for the Track
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Track
    """
    source: Source!
    """
    Participants contributing to this Track
    """
    contributors: [GRPS_Contribution!]

}


"""
Defines a Song (aka DDEX MusicalWork)
"""
type GRPS_Song {
    """
    The source system, unique identifier for the Song
    """
    id: ID!
    """
    A moniker identifying the source backend service for this instance of a Song
    """
    source: Source!
}

type Query {
"""
Search across for GRPS specific Participants, and if referenced, delegate to RDX service to find external links
# Search for matching Participant from the GRPS backend service
# Return GRPS_Participant type for each matching GRPS Participant
# A reference to a extParticipants field causes the federation to delegate to RDX service using GRPS Participant id and source
# RDX service finds all external Participants (id and source) mapped to the GRPS Participant
# A reference to a Spotify Participant field on the external Participant causes the federation to delegate to SPOT_Participant field
# The result is a GRPS Participant with a collection of external linked Participants
"""
findGRPSParticipantByName(limit: Int, offset: Int, query: String!): [GRPS_Participant!]
}
schema{
query: Query
}